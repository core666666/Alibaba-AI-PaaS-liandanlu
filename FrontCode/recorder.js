!function (t, e) { "object" == typeof exports && "object" == typeof module ? module.exports = e() : "function" == typeof define && define.amd ? define([], e) : "object" == typeof exports ? exports.Recorder = e() : t.Recorder = e() }(window, function () { return function (t) { var e = {}; function n(r) { if (e[r]) return e[r].exports; var i = e[r] = { i: r, l: !1, exports: {} }; return t[r].call(i.exports, i, i.exports, n), i.l = !0, i.exports } return n.m = t, n.c = e, n.d = function (t, e, r) { n.o(t, e) || Object.defineProperty(t, e, { enumerable: !0, get: r }) }, n.r = function (t) { "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(t, Symbol.toStringTag, { value: "Module" }), Object.defineProperty(t, "__esModule", { value: !0 }) }, n.t = function (t, e) { if (1 & e && (t = n(t)), 8 & e) return t; if (4 & e && "object" == typeof t && t && t.__esModule) return t; var r = Object.create(null); if (n.r(r), Object.defineProperty(r, "default", { enumerable: !0, value: t }), 2 & e && "string" != typeof t) for (var i in t) n.d(r, i, function (e) { return t[e] }.bind(null, i)); return r }, n.n = function (t) { var e = t && t.__esModule ? function () { return t.default } : function () { return t }; return n.d(e, "a", e), e }, n.o = function (t, e) { return Object.prototype.hasOwnProperty.call(t, e) }, n.p = "", n(n.s = 0) }([function (t, e, n) { "use strict"; function r(t, e) { for (var n = 0; n < e.length; n++) { var r = e[n]; r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(t, r.key, r) } } n.r(e); var i = !1, o = function () { function t() { var e = this, n = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}; !function (t, e) { if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function") }(this, t), this.context = new (window.AudioContext || window.webkitAudioContext), this.inputSampleRate = this.context.sampleRate, this.config = { sampleBits: [8, 16].includes(n.sampleBits) ? n.sampleBits : 16, sampleRate: [11025, 16e3, 22050, 24e3, 44100, 48e3].includes(n.sampleRate) ? n.sampleRate : this.inputSampleRate, numChannels: [1, 2].includes(n.numChannels) ? n.numChannels : 1 }, this.size = 0, this.buffer = [], this.PCMData = null, this.audioInput = null, this.createScript = this.context.createScriptProcessor || this.context.createJavaScriptNode, this.recorder = this.createScript.apply(this.context, [4096, this.config.numChannels, this.config.numChannels]), this.recorder.onaudioprocess = function (t) { if (1 === e.config.numChannels) { var n = t.inputBuffer.getChannelData(0); e.buffer.push(new Float32Array(n)), e.size += n.length } else { for (var r = new Float32Array(t.inputBuffer.getChannelData(0)), i = new Float32Array(t.inputBuffer.getChannelData(1)), o = new ArrayBuffer(r.byteLength + i.byteLength), a = new Float32Array(o), u = 0, s = 0; s < r.byteLength; ++s)a[u] = r[s], a[++u] = i[s], u++; e.buffer.push(a), e.size += u } } } var e, n, o; return e = t, (n = [{ key: "start", value: function () { var e = this; i || (this.clear(), i = !0, navigator.mediaDevices.getUserMedia({ audio: !0 }).then(function (t) { e.audioInput = e.context.createMediaStreamSource(t) }, function (e) { t.throwError(e.name + " : " + e.message) }).then(function () { e.audioInput.connect(e.recorder), e.recorder.connect(e.context.destination), e.inputSampleBits = 16, e.outputSampleRate = e.config.sampleRate, e.oututSampleBits = e.config.sampleBits })) } }, { key: "stop", value: function () { i = !1, this.audioInput && this.audioInput.disconnect(), this.recorder.disconnect() } }, { key: "clear", value: function () { this.buffer.length = 0, this.size = 0, this.PCMData = null, this.audioInput = null, this.source && (this.source.disconnect(), this.source = null) } }, { key: "play", value: function () { var t = this; this.stop(), this.context.decodeAudioData(this.encodeWAV().buffer, function (e) { t.source = t.context.createBufferSource(), t.source.buffer = e, t.source.connect(t.context.destination), t.source.start() }, function () { console.log("error") }) } }, { key: "getPCM", value: function () { return this.PCMData || (this.PCMData = this.encodePCM()) } }, { key: "getPCMBlob", value: function () { return new Blob([this.getPCM()]) } }, { key: "getWAV", value: function () { return this.encodeWAV() } }, { key: "getWAVBlob", value: function () { return new Blob([this.getWAV()], { type: "audio/wav" }) } }, { key: "flat", value: function () { for (var t = new Float32Array(this.size), e = 0, n = 0; n < this.buffer.length; n++)t.set(this.buffer[n], e), e += this.buffer[n].length; return t } }, { key: "compress", value: function () { for (var t = this.flat(), e = parseInt(this.inputSampleRate / this.outputSampleRate, 10) || 1, n = t.length / e, r = new Float32Array(n), i = 0, o = 0; i < n;)r[i] = t[o], o += e, i++; return r } }, { key: "encodePCM", value: function () { var t = this.compress(), e = Math.min(this.inputSampleBits, this.oututSampleBits), n = 0, r = t.length * (e / 8), i = new ArrayBuffer(r), o = new DataView(i); if (8 === e) for (var a = 0; a < t.length; a++, n++) { var u = (s = Math.max(-1, Math.min(1, t[a]))) < 0 ? 128 * s : 127 * s; u = parseInt(u + 128), o.setInt8(n, u, !0) } else for (a = 0; a < t.length; a++, n += 2) { var s = Math.max(-1, Math.min(1, t[a])); o.setInt16(n, s < 0 ? 32768 * s : 32767 * s, !0) } return o } }, { key: "encodeWAV", value: function () { var t = Math.min(this.inputSampleRate, this.outputSampleRate), e = Math.min(this.inputSampleBits, this.oututSampleBits), n = this.encodePCM(), r = new ArrayBuffer(44 + n.byteLength), i = new DataView(r), o = this.config.numChannels, u = 0; a(i, u, "RIFF"), u += 4, i.setUint32(u, 36 + n.byteLength, !0), a(i, u += 4, "WAVE"), a(i, u += 4, "fmt "), u += 4, i.setUint32(u, 16, !0), u += 4, i.setUint16(u, 1, !0), u += 2, i.setUint16(u, o, !0), u += 2, i.setUint32(u, t, !0), u += 4, i.setUint32(u, o * t * (e / 8), !0), u += 4, i.setUint16(u, o * (e / 8), !0), u += 2, i.setUint16(u, e, !0), a(i, u += 2, "data"), u += 4, i.setUint32(u, n.byteLength, !0), u += 4; for (var s = 0; s < n.byteLength;)i.setUint8(u, n.getUint8(s, !0), !0), u++, s++; return i } }]) && r(e.prototype, n), o && r(e, o), t }(); function a(t, e, n) { for (var r = 0; r < n.length; r++)t.setUint8(e + r, n.charCodeAt(r)) } o.throwError = function (t) { throw new Error(t) }, e.default = o }]).default });
//# sourceMappingURL=recorder.js.map